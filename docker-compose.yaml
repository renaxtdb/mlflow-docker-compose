version: '3'
services:
  postgresql:
    image: postgres:10.5
    container_name: postgresql
    volumes:
      - ./db/postgres:/var/lib/postgresql/data
      - ./db/logs:/var/log
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mlflow-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    hostname: postgresql
    restart: always
    networks:
      - nginx_network

  mlflow:
    build:
      context: .
      dockerfile: mlflow/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
    container_name: mlflow
    environment:
      # waitするホストを指定する．
      # 複数のwait_hostを指定することもできます．(MySQLだけでなくRedisの起動を待ちたい時なども便利です．)
      WAIT_HOSTS: postgresql:5432
    volumes:
      - ${MOUNT_PATH}:/home/jovyan/work
    ports:
      - 5000:5000
    depends_on:
      - postgresql
    command: bash -c "mlflow server --backend-store-uri ${DB_URL} --default-artifact-root ${ARTIFACT_PATH} --host 0.0.0.0 --port 5000"
    networks:
      - nginx_network

  jupyter:
    build:
      context: .
      dockerfile: jupyter/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
    image: albert/jupyter-mlflow:${PYTHON_VERSION}
    container_name: ${USER_NAME}-mlflow-jupyter-container
    hostname: ${USER_NAME}-jupyter
    ###############################################
    # リソースコントロール
    mem_limit: ${CONTAINER_LIMIT_MEMORY}
    # m: メガ g: ギガ　(メモリサイズ - ホストOS(ubuntu)に必要量2GB)/ユーザー数　で設定
    cpu_count: ${CONTAINER_USE_CPU}
    # cpu_count = (CPUコア数-1)VMのdockerユーザー数 を設定する
    ###############################################
    restart: always
    volumes:
      - ${MOUNT_PATH}:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
    environment:
      TZ: Asia/Tokyo
    # ポートの設定(ホスト:コンテナ)
    ports:
      - "${JUPYTER_PORT_NO}:${JUPYTER_PORT_NO}"
    depends_on:
      - postgresql
      - mlflow
    command: bash -c "
      poetry run jupyter lab
        --ip=0.0.0.0
        --port=${JUPYTER_PORT_NO}
        --allow-root
        --no-browser
        --NotebookApp.notebook_dir='/home/jovyan/work'
        --NotebookApp.token=''"
    networks:
      - nginx_network
networks:
  nginx_network:
    driver: bridge
