version: '3'
services:
  postgresql:
    image: postgres:10.5
    container_name: postgresql
    volumes:
      - ./db/postgres:/var/lib/postgresql/data
      - ./db/logs:/var/log
    ports:
      - ${POSTGRES_POERT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    hostname: postgresql
    restart: always
    networks:
      - nginx_network

  mlflow:
    build:
      context: .
      dockerfile: mlflow/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
    container_name: mlflow
    environment:
      WAIT_HOSTS: postgresql:${POSTGRES_POERT}, minio:9000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ${MOUNT_PATH}:/home/jovyan/work
    ports:
      - 5000:5000
    depends_on:
      - postgresql
    command: bash -c "mlflow server --backend-store-uri ${DB_URL} --default-artifact-root ${ARTIFACT_PATH} --host 0.0.0.0 --port 5000"
    networks:
      - nginx_network

  jupyter:
    build:
      context: .
      dockerfile: jupyter/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
    image: albert/jupyter-mlflow:${PYTHON_VERSION}
    container_name: ${USER_NAME}-mlflow-jupyter-container
    hostname: ${USER_NAME}-jupyter
    ###############################################
    # リソースコントロール
    mem_limit: ${CONTAINER_LIMIT_MEMORY}
    # m: メガ g: ギガ　(メモリサイズ - ホストOS(ubuntu)に必要量2GB)/ユーザー数　で設定
    cpu_count: ${CONTAINER_USE_CPU}
    # cpu_count = (CPUコア数-1)VMのdockerユーザー数 を設定する
    ###############################################
    restart: always
    volumes:
      - ${MOUNT_PATH}:/home/jovyan/work
    environment:
      TZ: Asia/Tokyo
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    # ポートの設定(ホスト:コンテナ)
    ports:
      - "${JUPYTER_PORT_NO}:${JUPYTER_PORT_NO}"
    depends_on:
      - postgresql
      - mlflow
    command: bash -c "
      poetry run jupyter lab
        --ip=0.0.0.0
        --port=${JUPYTER_PORT_NO}
        --allow-root
        --no-browser
        --NotebookApp.notebook_dir='/home/jovyan/work'
        --NotebookApp.token=''"
    networks:
      - nginx_network

  # artifact保存用のストレージ
  minio:
    image: minio/minio
    ports:
      - 9000:9000
    restart: always
    volumes:
      - ${MINIO_MOUNT_PATH}:/export
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /export
    networks:
      - nginx_network

  # minioコンテナ起動時にデフォルトのバケットを自動作成する
  defaultbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}) do echo 'try to create buckets...' && sleep 1; done;
      /usr/bin/mc mb myminio/default;
      /usr/bin/mc policy download myminio/default;
      exit 0;
      "
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
